// <auto-generated />
using System;
using MAVN.Service.Vouchers.MsSqlRepositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MAVN.Service.Vouchers.MsSqlRepositories.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("vouchers")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MAVN.Service.Vouchers.MsSqlRepositories.Entities.CustomerVoucherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("AmountInBaseCurrency")
                        .HasColumnName("amount_in_base_currency")
                        .HasColumnType("numeric");

                    b.Property<string>("AmountInTokens")
                        .IsRequired()
                        .HasColumnName("amount_in_tokens")
                        .HasColumnType("text");

                    b.Property<Guid>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnName("purchase_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("VoucherId")
                        .HasColumnName("voucher_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VoucherId")
                        .IsUnique();

                    b.ToTable("customer_vouchers");
                });

            modelBuilder.Entity("MAVN.Service.Vouchers.MsSqlRepositories.Entities.OperationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short>("Status")
                        .HasColumnName("status")
                        .HasColumnType("smallint");

                    b.Property<Guid>("TransferId")
                        .HasColumnName("transfer_id")
                        .HasColumnType("uuid");

                    b.Property<short>("Type")
                        .HasColumnName("type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("TransferId");

                    b.ToTable("operations");
                });

            modelBuilder.Entity("MAVN.Service.Vouchers.MsSqlRepositories.Entities.TransferEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnName("amount")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnName("created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SpendRuleId")
                        .HasColumnName("spend_rule_id")
                        .HasColumnType("uuid");

                    b.Property<short>("Status")
                        .HasColumnName("status")
                        .HasColumnType("smallint");

                    b.Property<Guid>("VoucherId")
                        .HasColumnName("voucher_id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VoucherId");

                    b.ToTable("transfers");
                });

            modelBuilder.Entity("MAVN.Service.Vouchers.MsSqlRepositories.Entities.VoucherEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnName("code")
                        .HasColumnType("varchar(15)");

                    b.Property<Guid>("SpendRuleId")
                        .HasColumnName("spend_rule_id")
                        .HasColumnType("uuid");

                    b.Property<short>("Status")
                        .HasColumnName("status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("SpendRuleId");

                    b.ToTable("vouchers");
                });

            modelBuilder.Entity("MAVN.Service.Vouchers.MsSqlRepositories.Entities.CustomerVoucherEntity", b =>
                {
                    b.HasOne("MAVN.Service.Vouchers.MsSqlRepositories.Entities.VoucherEntity", null)
                        .WithOne("CustomerVoucher")
                        .HasForeignKey("MAVN.Service.Vouchers.MsSqlRepositories.Entities.CustomerVoucherEntity", "VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAVN.Service.Vouchers.MsSqlRepositories.Entities.OperationEntity", b =>
                {
                    b.HasOne("MAVN.Service.Vouchers.MsSqlRepositories.Entities.TransferEntity", null)
                        .WithMany("Operations")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MAVN.Service.Vouchers.MsSqlRepositories.Entities.TransferEntity", b =>
                {
                    b.HasOne("MAVN.Service.Vouchers.MsSqlRepositories.Entities.VoucherEntity", null)
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
